[{"D:\\CodingChallenge\\100DayOfCode\\Week2\\Day5\\random-quote-machine\\src\\index.js":"1","D:\\CodingChallenge\\100DayOfCode\\Week2\\Day5\\random-quote-machine\\src\\reportWebVitals.js":"2","D:\\CodingChallenge\\100DayOfCode\\Week2\\Day5\\random-quote-machine\\src\\App.js":"3","D:\\CodingChallenge\\100DayOfCode\\Week2\\Day5\\random-quote-machine\\src\\components\\Button.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":1438,"mtime":1610432281316,"results":"8","hashOfConfig":"6"},{"size":182,"mtime":1610428910836,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"13cimy2",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\CodingChallenge\\100DayOfCode\\Week2\\Day5\\random-quote-machine\\src\\index.js",[],["20","21"],"D:\\CodingChallenge\\100DayOfCode\\Week2\\Day5\\random-quote-machine\\src\\reportWebVitals.js",[],"D:\\CodingChallenge\\100DayOfCode\\Week2\\Day5\\random-quote-machine\\src\\App.js",["22"],"import React, { Component } from \"react\";\nimport { random } from \"lodash\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [],\n      selectedQuoteIndex: null,\n    };\n    this.selectQuoteIndex = this.selectQuoteIndex.bind(this);\n  }\n  componentDidMount() {\n    fetch(\n      \"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\"\n    )\n      .then((data) => data.json())\n      .then((quotes) =>\n        this.setState({ quotes }, () => {\n          this.setState({ selectedQuoteIndex: this.selectQuoteIndex() });\n        })\n      );\n  }\n\n  get selectedQuote() {\n    if (\n      !this.state.quotes.length ||\n      !Number.isInteger(this.state.selectedQuoteIndex)\n    ) {\n      return;\n    }\n    return this.state.quotes[this.state.selectedQuoteIndex];\n  }\n\n  selectQuoteIndex() {\n    if (!this.state.quotes.length) {\n      return;\n    }\n    return random(0, this.state.quotes.length - 1);\n  }\n\n  render() {\n    return (\n      <div className=\"App\" id=\"quote-box\">\n        {this.selectedQuote\n          ? `\"${this.selectedQuote.quote}\" - ${this.selectedQuote.author}`\n          : \"\"}\n        <Button\n          buttonDisplayNone=\"Next Quote\"\n          onClick={this.nextQuoteClickHandler}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","D:\\CodingChallenge\\100DayOfCode\\Week2\\Day5\\random-quote-machine\\src\\components\\Button.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":32,"column":7,"nodeType":"29","messageId":"30","endLine":32,"endColumn":14},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"getter-return","Expected to return a value in getter 'selectedQuote'.","ReturnStatement","expected","no-global-assign","no-unsafe-negation"]